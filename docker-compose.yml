version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: neighbors-gem-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: NeighborsGem
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - neighbors-gem-network

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: neighbors-gem-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - neighbors-gem-network
    profiles:
      - tools

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: neighbors-gem-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3500
      MONGO_URI: mongodb://admin:password@mongodb:27017/NeighborsGem?authSource=admin
      ACCESS_TOKEN_SECRET: your_access_token_secret_here_minimum_32_characters
      REFRESH_TOKEN_SECRET: your_refresh_token_secret_here_minimum_32_characters
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: debug
    ports:
      - "3500:3500"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      - mongodb
    networks:
      - neighbors-gem-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3500/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: neighbors-gem-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neighbors-gem-network
    profiles:
      - cache

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  neighbors-gem-network:
    driver: bridge
